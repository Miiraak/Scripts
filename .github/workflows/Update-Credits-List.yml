name: Update Credits List

on:
  pull_request:
    types: [closed]
    branches: [master]

  schedule:
    - cron: '0 8 * * *'  # Tous les jours Ã  8h UTC

  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no commit)'
        required: false
        default: 'false'

jobs:
  update_credits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate CREDITS.md from Git history
        run: |
          echo "Generating CREDITS.md..."

          git fetch --all
          git log --pretty=format:'%H|%an|%ae|%ad' --date=iso > commits_full.log

          awk -F'|' '
          {
            hash = $1
            name = $2
            email = $3
            date = $4

            # Derive username
            if (email ~ /\+.*@users\.noreply\.github\.com$/) {
              sub(/\+/, " ", email)
              split(email, parts, " ")
              user = "@" parts[2]
            } else if (email ~ /^[0-9]+@users\.noreply\.github\.com$/) {
              split(email, parts, "@")
              user = "@" parts[1]
            } else {
              user = "@unknown"
            }

            key = name "|" user

            count[key]++
            if (date > last_date[key]) {
              last_date[key] = date
              last_hash[key] = hash
            }
          }
          END {
            PROCINFO["sorted_in"] = "@val_num_desc"
            for (k in count) {
              split(k, parts, "|")
              name = parts[1]
              user = parts[2]
              hash = last_hash[k]
              date = substr(last_date[k], 1, 16)

              # Get last file for this user
              cmd = "git show --pretty=format: --name-only " hash " | head -n 1"
              cmd | getline file
              close(cmd)

              if (file == "") file = "/unknown"
              else file = "/" file

              gsub("|", "\\|", name)
              printf("| %s | %s | %s | %d | %s |\n", name, user, date, count[k], file)
            }
          }' > CREDITS.tmp

          {
            echo "# Credits"
            echo ""
            echo "| Contributor | Profile | Last Commit Date | Total Commits | Last Description/Path |"
            echo "|-------------|---------|------------------|----------------|-------------------------|"
            cat CREDITS.tmp
            echo ""
            echo "<!-- This file is automatically updated by workflow. Additions will appear below. -->"
          } > CREDITS.md

      - name: Show diff
        run: git diff CREDITS.md || true

      - name: Commit and push if not dry-run
        if: github.event.inputs.dry_run != 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add CREDITS.md
            git commit -m "Automated update of CREDITS.md"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.AWSR }}
