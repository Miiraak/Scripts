name: Update Credits List

on:
  pull_request:
    types: [closed]
    branches: [master]

  schedule:
    - cron: '0 8 * * *'  # Tous les jours Ã  8h UTC

  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (no commit)'
        required: false
        default: 'false'

jobs:
  update_credits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract commits and update CREDITS.md
        id: update
        run: |
          echo "Updating CREDITS.md from commit history..."

          cp CREDITS.md CREDITS.md.bak

          temp="CREDITS.tmp"
          echo "" > "$temp"

          git log --reverse --date=iso --pretty=format:'%H|%an|%ae|%ad|%s' | while IFS='|' read -r hash name email date msg; do
            files=$(git show --pretty="" --name-only "$hash" | head -n 1)
            file_path="/${files:-unknown}"

            # Try GitHub username from noreply emails like username+hash@users.noreply.github.com
            if [[ "$email" =~ ^([a-zA-Z0-9-]+)(\+.*)?@users\.noreply\.github\.com$ ]]; then
              username="@${BASH_REMATCH[1]}"
            else
              username="@unknown"
            fi

            # Contribution type based on commit message (simple heuristic)
            lc_msg=$(echo "$msg" | tr '[:upper:]' '[:lower:]')
            if [[ $lc_msg == *"fix"* ]]; then
              type="Fix"
            elif [[ $lc_msg == *"doc"* ]]; then
              type="Docs"
            elif [[ $lc_msg == *"refactor"* ]]; then
              type="Refactor"
            elif [[ $lc_msg == *"add"* || $lc_msg == *"feature"* ]]; then
              type="Feature"
            elif [[ $lc_msg == *"remove"* || $lc_msg == *"delete"* ]]; then
              type="Cleanup"
            else
              type="Code"
            fi

            # Format datetime (ISO 8601 format)
            datetime=$(date -d "$date" '+%Y-%m-%d %H:%M')

            echo "| ${name} | ${username} | ${type} | ${file_path} | ${datetime} |" >> "$temp"
          done

          # Insert new entries below the comment marker
          awk -v new_entries="$(cat "$temp")" '
            1
            /<!-- This file is automatically updated by workflow. Additions will appear below. -->/ {
              print new_entries
              exit
            }
          ' CREDITS.md.bak > CREDITS.md

          rm "$temp"

      - name: Show diff
        run: git diff CREDITS.md || true

      - name: Commit and push if not dry-run
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add CREDITS.md
            git commit -m "Automated update of CREDITS.md"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.AWSR }}
