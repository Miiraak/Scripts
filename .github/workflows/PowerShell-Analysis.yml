name: PowerShell Analysis

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:
  pull_request:
    paths:
      - '**/*.ps1'

jobs:
  scan-all:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install PSScriptAnalyzer
        run: pwsh -Command "Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser"

      - name: Analyze all .ps1 scripts and output formatted markdown
        shell: bash
        run: |
          pwsh -Command "Invoke-ScriptAnalyzer -Path . -Recurse | ConvertTo-Json -Depth 5" > psa_result.json

          printf "%s\n" \
          "\$results = Get-Content psa_result.json | ConvertFrom-Json" \
          "\$md = @()" \
          "\$md += '## PSScriptAnalyzer Results'" \
          "\$md += ''" \
          "if (\$results.Count -eq 0) {" \
          "  \$md += 'No issues detected.'" \
          "} else {" \
          "  \$md += '| File | Line | Rule | Severity | Message |'" \
          "  \$md += '| ---- | ---- | ---- | -------- | ------- |'" \
          "  foreach (\$item in \$results) {" \
          "    \$file = if (\$item.ScriptName) { \$item.ScriptName } else { '' }" \
          "    \$line = if (\$item.Line) { \$item.Line } else { '' }" \
          "    \$rule = if (\$item.RuleName) { \$item.RuleName } else { '' }" \
          "    \$severity = switch (\$item.Severity) { 0 {'Info'}; 1 {'Warning'}; 2 {'Error'}; default { \$item.Severity } }" \
          "    \$msg = (\$item.Message -replace '\|','\\|') -replace '\r?\n',' '" \
          "    if (\$msg.Length -gt 120) { \$msg = \$msg.Substring(0,117) + '...' }" \
          "    \$md += \"| \$file | \$line | \$rule | \$severity | \$msg |\"" \
          "  }" \
          "}" \
          "Set-Content -Path psa_result.md -Value (\$md -join \"\`n\")" > format_psa.ps1

          pwsh -File format_psa.ps1

          echo '====== PSScriptAnalyzer Markdown Table ======'
          cat psa_result.md
          echo '============================================='

  scan-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Install PSScriptAnalyzer
        run: pwsh -Command "Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser"

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }}

      - name: Analyze only modified/added/renamed .ps1 files and comment on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          FILES=$(git diff --name-status origin/${{ github.event.pull_request.base.ref }}...HEAD | grep -E '^[AMR]' | awk '{print $NF}' | grep '\.ps1$')
          if [ -n "$FILES" ]; then
            # Write the PowerShell script that takes an array of files
            printf "%s\n" \
            "param([string[]]\$Files)" \
            "\$results = Invoke-ScriptAnalyzer -Path \$Files -Recurse | ConvertTo-Json -Depth 5" \
            "Set-Content -Path psa_result.json -Value \$results" > run_psa.ps1

            pwsh -File run_psa.ps1 $FILES

            printf "%s\n" \
            "\$results = Get-Content psa_result.json | ConvertFrom-Json" \
            "\$md = @()" \
            "\$md += '## PSScriptAnalyzer Results'" \
            "\$md += ''" \
            "if (\$results.Count -eq 0) {" \
            "  \$md += 'No issues detected.'" \
            "} else {" \
            "  \$md += '| File | Line | Rule | Severity | Message |'" \
            "  \$md += '| ---- | ---- | ---- | -------- | ------- |'" \
            "  foreach (\$item in \$results) {" \
            "    \$file = if (\$item.ScriptName) { \$item.ScriptName } else { '' }" \
            "    \$line = if (\$item.Line) { \$item.Line } else { '' }" \
            "    \$rule = if (\$item.RuleName) { \$item.RuleName } else { '' }" \
            "    \$severity = switch (\$item.Severity) { 0 {'Info'}; 1 {'Warning'}; 2 {'Error'}; default { \$item.Severity } }" \
            "    \$msg = (\$item.Message -replace '\|','\\|') -replace '\r?\n',' '" \
            "    if (\$msg.Length -gt 120) { \$msg = \$msg.Substring(0,117) + '...' }" \
            "    \$md += \"| \$file | \$line | \$rule | \$severity | \$msg |\"" \
            "  }" \
            "}" \
            "Set-Content -Path psa_result.md -Value (\$md -join \"\`n\")" > format_psa.ps1

            pwsh -File format_psa.ps1

            gh pr comment ${{ github.event.pull_request.number }} --body-file psa_result.md
          else
            echo "No PowerShell (.ps1) scripts were modified, added or renamed in this PR."
          fi
